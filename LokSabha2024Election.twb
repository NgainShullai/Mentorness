<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook locale='en_IN' original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='LokSabha2024Election' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Election dataset 2024.csv (Multiple Connections)' inline='true' name='federated.0yajqft17xqn5j136lryb14dpj3j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Election dataset 2024' name='textscan.08yjn6w0o5yrop19vvz7i0xm6hk6'>
            <connection class='textscan' directory='D:/documents all/Mentorness Intern/Datasets/Election' filename='Election dataset 2024.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Alliance' name='textscan.01f609u0f9cn8n1g4suvo06o75um'>
            <connection class='textscan' directory='D:/documents all/Mentorness Intern/Datasets/Election' filename='Alliance.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Election dataset 2024.csv].[Leading Party]' />
              <expression op='[Alliance.csv].[Party name]' />
            </expression>
          </clause>
          <relation connection='textscan.08yjn6w0o5yrop19vvz7i0xm6hk6' name='Election dataset 2024.csv' table='[Election dataset 2024#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='_id' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='integer' name='Const. No.' ordinal='2' />
              <column datatype='string' name='Constituency' ordinal='3' />
              <column datatype='string' name='Leading Candidate' ordinal='4' />
              <column datatype='string' name='Leading Party' ordinal='5' />
              <column datatype='string' name='Trailing Canddiate' ordinal='6' />
              <column datatype='string' name='Trailing Party' ordinal='7' />
              <column datatype='integer' name='Margin' ordinal='8' />
              <column datatype='string' name='Status' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.01f609u0f9cn8n1g4suvo06o75um' name='Alliance.csv' table='[Alliance#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Party name' ordinal='0' />
              <column datatype='string' name='Alliance' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Election dataset 2024.csv].[Leading Party]' />
              <expression op='[Alliance.csv].[Party name]' />
            </expression>
          </clause>
          <relation connection='textscan.08yjn6w0o5yrop19vvz7i0xm6hk6' name='Election dataset 2024.csv' table='[Election dataset 2024#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='_id' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='integer' name='Const. No.' ordinal='2' />
              <column datatype='string' name='Constituency' ordinal='3' />
              <column datatype='string' name='Leading Candidate' ordinal='4' />
              <column datatype='string' name='Leading Party' ordinal='5' />
              <column datatype='string' name='Trailing Canddiate' ordinal='6' />
              <column datatype='string' name='Trailing Party' ordinal='7' />
              <column datatype='integer' name='Margin' ordinal='8' />
              <column datatype='string' name='Status' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.01f609u0f9cn8n1g4suvo06o75um' name='Alliance.csv' table='[Alliance#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='Party name' ordinal='0' />
              <column datatype='string' name='Alliance' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Alliance.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_id]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Const. No.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Const. No.]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Const. No.</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Constituency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Constituency]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Constituency</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Leading Candidate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Leading Candidate]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Leading Candidate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Leading Party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Leading Party]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Leading Party</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trailing Canddiate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Trailing Canddiate]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Trailing Canddiate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trailing Party</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Trailing Party]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Trailing Party</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Margin]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Margin</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Election dataset 2024.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Party name]</local-name>
            <parent-name>[Alliance.csv]</parent-name>
            <remote-alias>Party name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alliance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Alliance]</local-name>
            <parent-name>[Alliance.csv]</parent-name>
            <remote-alias>Alliance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Const. No.]' role='measure' type='quantitative' />
      <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Leading Candidate]' role='dimension' type='nominal' />
      <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Margin]' role='measure' type='quantitative' />
      <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column datatype='string' name='[Trailing Canddiate]' role='dimension' type='nominal' />
      <column datatype='string' name='[Trailing Party]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Election dataset 2024.csv' datatype='table' name='[__tableau_internal_object_id__].[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]' role='measure' type='quantitative' />
      <column caption='_Id' datatype='integer' hidden='true' name='[_id]' role='dimension' type='ordinal' />
      <column-instance column='[Margin]' derivation='Avg' name='[avg:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Constituency]' derivation='Count' name='[cnt:Constituency:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Leading Party]' derivation='Count' name='[cnt:Leading Party:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='Count' name='[cnt:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Leading Party]' derivation='CountD' name='[ctd:Leading Party:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Margin]' derivation='CountD' name='[ctd:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Leading Party]' derivation='Max' name='[max:Leading Party:nk]' pivot='key' type='nominal' />
      <column-instance column='[Margin]' derivation='Median' name='[med:Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Leading Party]' derivation='Min' name='[min:Leading Party:nk]' pivot='key' type='nominal' />
      <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
      <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
      <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
      <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      <column-instance column='[Trailing Party]' derivation='None' name='[none:Trailing Party:nk]' pivot='key' type='nominal' />
      <column-instance column='[Leading Party]' derivation='Count' name='[pcto:cnt:Leading Party:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Margin]' derivation='Count' name='[pcto:cnt:Margin:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Margin]' derivation='Sum' name='[pcto:sum:Margin:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)' hidden='true' name='[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Alliance]' />
          <groupfilter function='level-members' level='[Constituency]' />
          <groupfilter function='level-members' level='[Leading Candidate]' />
          <groupfilter function='level-members' level='[Leading Party]' />
          <groupfilter function='level-members' level='[Party name]' />
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='level-members' level='[Trailing Canddiate]' />
          <groupfilter function='level-members' level='[Trailing Party]' />
        </groupfilter>
      </group>
      <group caption='Action (Alliance,Leading Party,Status)' hidden='true' name='[Action (Alliance,Leading Party,Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Alliance]' />
          <groupfilter function='level-members' level='[Leading Party]' />
          <groupfilter function='level-members' level='[Status]' />
        </groupfilter>
      </group>
      <group caption='Action (Constituency,Leading Party)' hidden='true' name='[Action (Constituency,Leading Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Constituency]' />
          <groupfilter function='level-members' level='[Leading Party]' />
        </groupfilter>
      </group>
      <group caption='Action (Leading Party)' hidden='true' name='[Action (Leading Party)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Leading Party]' />
        </groupfilter>
      </group>
      <group caption='Action (Leading Party,Party name)' hidden='true' name='[Action (Leading Party,Party name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Leading Party]' />
          <groupfilter function='level-members' level='[Party name]' />
        </groupfilter>
      </group>
      <group caption='Action (Party name,State)' hidden='true' name='[Action (Party name,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Party name]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Leading Party,Status)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Leading Party:nk]' />
          <groupfilter function='level-members' level='[none:Status:nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_IN' class='hyper' dbname='C:/Users/Win/AppData/Local/Temp/TableauTemp/#TableauTemp_1few9h60i0ysev1aevc271a0xfsl.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/28/2024 03:53:53 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>0</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Constituency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Constituency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Constituency</remote-alias>
              <ordinal>1</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>541</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Leading Candidate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Leading Candidate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Leading Candidate</remote-alias>
              <ordinal>2</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>542</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Leading Party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Leading Party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Leading Party</remote-alias>
              <ordinal>3</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trailing Canddiate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Trailing Canddiate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trailing Canddiate</remote-alias>
              <ordinal>4</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>543</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trailing Party</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Trailing Party]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trailing Party</remote-alias>
              <ordinal>5</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Margin</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Margin</remote-alias>
              <ordinal>6</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>543</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Status</remote-alias>
              <ordinal>7</ordinal>
              <family>Election dataset 2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Party name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Party name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Party name</remote-alias>
              <ordinal>8</ordinal>
              <family>Alliance.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Alliance</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Alliance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Alliance</remote-alias>
              <ordinal>9</ordinal>
              <family>Alliance.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Alliance:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#eb1e2c'>
              <bucket>&quot;Independent&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;NDA&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;INDIA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Leading Party:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[ctd:Leading Party:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[max:Leading Party:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[min:Leading Party:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[pcto:cnt:Leading Party:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[avg:Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[ctd:Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[med:Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[pcto:cnt:Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[pcto:sum:Margin:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Trailing Party:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bharatiya Janata Party&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Communist Party of India  (Marxist)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;All India Trinamool Congress&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samajwadi Party&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indian National Congress&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Constituency:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alappuzha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andaman &amp; Nicobar Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BALAGHAT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bardhaman Purba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bhagalpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bolpur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chitradurga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dhanbad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ERODE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghazipur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hathras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JAIPUR RURAL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JODHPUR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kanthi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kheri&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kushi Nagar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mainpuri&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MIZORAM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NAGAUR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North-East Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pilibhit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samastipur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SIDHI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sundargarh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TIRUVANNAMALAI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VELLORE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adilabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amreli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Attingal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bankura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bidar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHENNAI NORTH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DAMOH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diphu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gadchiroli - Chimur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Idukki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jangipur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KANCHEEPURAM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Keonjhar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KORBA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madhepura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mavelikkara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muzaffarnagar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Raichur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;REWA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shahjahanpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sonitpur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thiruvananthapuram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unnao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zahirabad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ahmednagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bagalkot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barabanki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berhampur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BILASPUR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chhota Udaipur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAUSA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DURG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gautam Buddha Nagar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamirpur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jadavpur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jhanjharpur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kannauj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khammam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KRISHNAGIRI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maharajganj&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Medinipur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patna Sahib&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RAIPUR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAGAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shimoga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Srikakulam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TIRUCHIRAPPALLI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vaishali&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ahmedabad West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alipurduars&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arambagh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Banaskantha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bargarh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhavnagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chalakudy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COIMBATORE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dhaurahra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FARIDABAD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gonda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hindupur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jalgaon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kachchh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Karimnagar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kokrajhar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lalganj&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malkajgiri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mumbai North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nalanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Outer Manipur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pratapgarh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RAMANATHAPURAM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sangrur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singhbhum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SURGUJA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tumkur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VIRUDHUNAGAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alathur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aonla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Balasore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bardhaman-Durgapur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bhandara Gondiya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulandshahr&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chittoor(SC)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DHAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Etah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghosi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hatkanangale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jajpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jorhat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Karakat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Khunti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malappuram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mohanlalganj&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nagina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North-West Delhi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;POLLACHI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajmahal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sambalpur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SIKAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Supaul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TONK-SAWAI MADHOPUR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VIDISHA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anandpur Sahib&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baghpat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baramati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BETUL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Birbhum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHIDAMBARAM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Davanagere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Delhi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gaya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hardoi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jagatsinghpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jhansi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KANNIYAKUMARI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KHANDWA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Krishnanagar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MAHASAMUND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meerut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagaon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NILGIRIS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peddapalle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajahmundry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saharanpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shirdi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SRINAGAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TIRUNELVELI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valmiki Nagar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ambedkar Nagar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asansol&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangaon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Basti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BHOPAL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chatra&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dakshina Kannada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DINDIGUL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Firozabad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gurdaspur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howrah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamshedpur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KALLAKURICHI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kaziranga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Koppal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Machilipatnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mathurapur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Munger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Narsapuram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parbhani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Purvi Champaran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ratnagiri- Sindhudurg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Secunderabad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solapur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;THENI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UJJAIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Delhi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amravati&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bansgaon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Begusarai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bijapur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHENNAI SOUTH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darbhanga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Domariyaganj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gandhinagar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GWALIOR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;INDORE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JANJGIR-CHAMPA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kandhamal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Khadoor Sahib&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KOTA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madhubani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MAYILADUTHURAI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Muzaffarpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Navsari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pathanamthitta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raigad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robertsganj&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheohar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Delhi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;THOOTHUKKUDI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uttara Kannada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amalapuram (SC)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arunachal East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangalore Rural&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Basirhat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BHIWANI-MAHENDRAGARH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chandni Chowk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dadar &amp; Nagar Haveli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond harbour&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fatehpur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GUNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HOSHANGABAD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JAMMU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kakinada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Katihar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kolkata Uttar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mandya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mumbai South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nandurbar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PALI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Purnia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Satara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SIVAGANGA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Udupi Chikmagalur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wardha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Akbarpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ananthapur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baharaich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BARAMULLA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhadohi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bishnupur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chikkballapur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Deoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eluru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghatal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haridwar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jahanabad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jhargram&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kannur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KHARGONE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kurnoolu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mahbubnagar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mirzapur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NAGAPATTINAM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nizamabad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PERAMBALUR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajampet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SALEM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shirur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SRIPERUMBUDUR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TIRUPPUR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valsad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ARANI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Banda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BARMER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BHILWARA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chamarajanagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coochbehar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dhenkanal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faridkot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gopalganj&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hingoli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jalna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kadapa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KARNAL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kolar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MANDI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mumbai North Central&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nalgonda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palakkad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUDUCHERRY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rampur&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sant Kabir Nagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SIRSA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamluk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tura&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Almora&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Araria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangalore central&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barpeta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BHIND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chandauli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CUDDALORE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dhubri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Farrukhabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gorakhpur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HISAR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JALORE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kairana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KARUR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kolhapur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lohardaga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MANDLA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mumbai North East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NAMAKKAL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palamau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ramtek&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sitamarhi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tehri Garhwal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UDAIPUR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vizianagaram&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AMBALA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arunachal West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangalore South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BASTAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhongir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chandrapur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dahod&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dibrugarh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fatehpur Sikri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guntur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hoshiarpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamnagar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalahandi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kaushambi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kollam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Machhlishahr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mathura&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mumbai South Central&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nandyal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panchmahal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Purulia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RATLAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SATNA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Siwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;THANJAVUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ujiarpur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wayanad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amethi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aska&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Banka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bathinda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhubaneswar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHENNAI CENTRAL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dindori&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Firozpur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GURGAON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamui&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kalyan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kendrapara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Koraput&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maval&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murshidabad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Narsaraopet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paschim Champaran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rae Bareli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHAHDOL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SONIPAT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thirupathi(SC)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uluberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yavatmal- Washim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ahmedabad East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ARAKKONAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ballia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bardoli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BHARATPUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buldhana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHITTORGARH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DHARMAPURI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Etawah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Giridih&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haveri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jalandhar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joynagar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KARAULI-DHOLPUR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kishanganj&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lakhimpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldaha Dakshin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moradabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ongole&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ponnani&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RAJNANDGAON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sambhal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tripura East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vijayawada&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;AJMER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Akola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ANANTNAG-RAJOURI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baharampur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barasat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bhadrak&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bolangir&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chikkodi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DEWAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ernakulam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hassan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JAIPUR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JHUNJHUNU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kheda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KURUKSHETRA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mahesana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Misrikh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nagarkurnool&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Goa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Phulpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RAJGARH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Salempur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shrawasti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sultanpur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TIRUVALLUR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amroha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azamgarh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BANSWARA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgaum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bijnor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chevella&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darjeeling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dum dum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GANGANAGAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hajipur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inner Manipur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jaunpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KANGRA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khagaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kottayam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MADURAI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayurbhanj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nawada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Patiala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raiganj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROHTAK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shillong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Goa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thrissur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vadakara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALWAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arrah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangalore North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barrackpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhiwandi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dhule&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fatehgarh Sahib&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gulbarga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hooghly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalpaiguri&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaiserganj&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kasaragod&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kolkata Dakshin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MANDSOUR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mumbai North West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nanded&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palghar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puri&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ranaghat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sasaram&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sitapur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TENKASI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UDHAMPUR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Warangal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aligarh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Araku (ST)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Balurghat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bareilly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bharuch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buxar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHURU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dharwad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faizabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Godda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hazaribagh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jalaun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junagadh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karimganj&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kodarma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldaha Uttar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MORENA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nainital-Udhamsingh Nagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Osmanabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Porbandar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RAJSAMAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sangli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silchar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Surendranagar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tripura West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VILUPPURAM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anakapalle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Badaun&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bapatla (SC)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bellary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BIKANER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHHINDWARA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darrang-Udalguri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dumka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garhwal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HAMIRPUR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JABALPUR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JHALAWAR-BARAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KANKER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KHAJURAHO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kozhikode&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mahabubabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Medak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nabarangpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nellore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Patliputra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RAIGARH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sabarkantha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SHIMLA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Srerampur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TIKAMGARH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Leading Party:nk]&#10;[none:Trailing Party:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bharatiya Janata Party&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Nationalist Congress Party  Sharadchandra Pawar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Indian National Congress&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Communist Party of India  (Marxist)&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman &amp; Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NCT OF Delhi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dadra &amp; Nagar Haveli and Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Leading Party:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;All India Trinamool Congress&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Hindustani Awam Morcha (Secular)&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Kerala Congress&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Samajwadi Party&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Yuvajana Sramika Rythu Congress Party&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Apna Dal (Soneylal)&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Independent&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Lok Janshakti Party(Ram Vilas)&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Shiromani Akali Dal&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Zoram Peoples Movement&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Asom Gana Parishad&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Indian National Congress&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Marumalarchi Dravida Munnetra Kazhagam&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Shiv Sena&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Bharat Adivasi Party&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Indian Union Muslim League&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Nationalist Congress Party&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Shiv Sena (Uddhav Balasaheb Thackrey)&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Bharatiya Janata Party&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Jammu &amp; Kashmir National Conference&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Nationalist Congress Party  Sharadchandra Pawar&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Sikkim Krantikari Morcha&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Aam Aadmi Party&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Communist Party of India&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Janasena Party&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Rashtriya Janata Dal&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Telugu Desam&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;AJSU Party&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Communist Party of India  (Marxist)&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Janata Dal  (United)&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Rashtriya Loktantrik Party&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Viduthalai Chiruthaigal Katchi&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;All India Majlis-E-Ittehadul Muslimeen&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Dravida Munnetra Kazhagam&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Jharkhand Mukti Morcha&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Revolutionary Socialist Party&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Voice of the People Party&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Aazad Samaj Party (Kanshi Ram)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Communist Party of India  (Marxist-Leninist)  (Liberation)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Janata Dal  (Secular)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Rashtriya Lok Dal&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;United Peoples Party, Liberal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Party name:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bharatiya Janata Party&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rashtriya Lok Dal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aam Aadmi Party&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;All India Trinamool Congress&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marumalarchi Dravida Munnetra Kazhagam&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Communist Party of India  (Marxist-Leninist)  (Liberation)&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Nationalist Congress Party  Sharadchandra Pawar&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Communist Party of India  (Marxist)&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Shiromani Akali Dal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dravida Munnetra Kazhagam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Communist Party of India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rashtriya Loktantrik Party&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Apna Dal (Soneylal)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nationalist Congress Party&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Hindustani Awam Morcha (Secular)&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Shiv Sena (Uddhav Balasaheb Thackrey)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Viduthalai Chiruthaigal Katchi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jharkhand Mukti Morcha&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Independent&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Telugu Desam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indian Union Muslim League&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Asom Gana Parishad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shiv Sena&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Jammu &amp; Kashmir National Conference&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;United Peoples Party, Liberal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Revolutionary Socialist Party&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Aazad Samaj Party (Kanshi Ram)&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Janasena Party&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Voice of the People Party&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rashtriya Janata Dal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kerala Congress&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;All India Majlis-E-Ittehadul Muslimeen&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Janata Dal  (United)&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Zoram Peoples Movement&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Bharat Adivasi Party&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Lok Janshakti Party(Ram Vilas)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indian National Congress&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sikkim Krantikari Morcha&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;AJSU Party&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Janata Dal  (Secular)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Yuvajana Sramika Rythu Congress Party&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samajwadi Party&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Leading Party:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;All India Trinamool Congress&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Hindustani Awam Morcha (Secular)&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Kerala Congress&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Samajwadi Party&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Yuvajana Sramika Rythu Congress Party&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Apna Dal (Soneylal)&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Independent&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Lok Janshakti Party(Ram Vilas)&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Shiromani Akali Dal&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Zoram Peoples Movement&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Asom Gana Parishad&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Indian National Congress&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Marumalarchi Dravida Munnetra Kazhagam&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Shiv Sena&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Bharat Adivasi Party&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Indian Union Muslim League&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Nationalist Congress Party&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;Shiv Sena (Uddhav Balasaheb Thackrey)&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Bharatiya Janata Party&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Jammu &amp; Kashmir National Conference&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Nationalist Congress Party  Sharadchandra Pawar&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Sikkim Krantikari Morcha&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Aam Aadmi Party&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Communist Party of India&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Janasena Party&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Rashtriya Janata Dal&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Telugu Desam&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;AJSU Party&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Communist Party of India  (Marxist)&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Janata Dal  (United)&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Rashtriya Loktantrik Party&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Viduthalai Chiruthaigal Katchi&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;All India Majlis-E-Ittehadul Muslimeen&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Dravida Munnetra Kazhagam&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Jharkhand Mukti Morcha&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Revolutionary Socialist Party&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Voice of the People Party&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Aazad Samaj Party (Kanshi Ram)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Communist Party of India  (Marxist-Leninist)  (Liberation)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Janata Dal  (Secular)&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Rashtriya Lok Dal&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;United Peoples Party, Liberal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Election dataset 2024.csv' id='Election dataset 2024.csv_F7AF86A372834A11B3AE7DDC32514E2F'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Election dataset 2024.csv].[Leading Party]' />
                    <expression op='[Alliance.csv].[Party name]' />
                  </expression>
                </clause>
                <relation connection='textscan.08yjn6w0o5yrop19vvz7i0xm6hk6' name='Election dataset 2024.csv' table='[Election dataset 2024#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                    <column datatype='integer' name='_id' ordinal='0' />
                    <column datatype='string' name='State' ordinal='1' />
                    <column datatype='integer' name='Const. No.' ordinal='2' />
                    <column datatype='string' name='Constituency' ordinal='3' />
                    <column datatype='string' name='Leading Candidate' ordinal='4' />
                    <column datatype='string' name='Leading Party' ordinal='5' />
                    <column datatype='string' name='Trailing Canddiate' ordinal='6' />
                    <column datatype='string' name='Trailing Party' ordinal='7' />
                    <column datatype='integer' name='Margin' ordinal='8' />
                    <column datatype='string' name='Status' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='textscan.01f609u0f9cn8n1g4suvo06o75um' name='Alliance.csv' table='[Alliance#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                    <column datatype='string' name='Party name' ordinal='0' />
                    <column datatype='string' name='Alliance' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2A9CD2522F7149789ACB546D5678C717]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='State Party &amp; Alliance' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_92F95D2F37AE46DBAF6FF4A976ECD8BA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Seatwon' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_0FC88A13F06847C89E26FED0A1E194BD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Victory/Trailing Margi' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_9A0782CAF45F419DAEC0388B4D445255]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='PartyMargin' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_BAFA61971FA7478AA15A5C51A83E1582]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Party Status' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_DC9F396390174085A16A5513F7883646]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Party &amp; Alliance Seats' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Party &amp; Alliance Seats'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>Party &amp; &lt;</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&gt; Alliance by No. of Seats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
          </datasources>
          <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
            <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
            <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Constituency]' derivation='Count' name='[cnt:Constituency:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0FC88A13F06847C89E26FED0A1E194BD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]'>
            <groupfilter function='level-members' level='[Leading Party]' user:ui-action-filter='[Action2_92F95D2F37AE46DBAF6FF4A976ECD8BA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Alliance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Constituency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Party name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' field-type='quantitative' major-origin='0' major-show='false' major-spacing='100' scope='rows' type='space' />
            <format attr='height' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' value='235' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' value='Tw Cen MT' />
            <format attr='text-orientation' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' value='-90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' value='Tw Cen MT' />
            <format attr='vertical-align' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' value='top' />
            <format attr='text-align' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' value='center' />
            <format attr='text-orientation' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
            <format attr='font-family' value='Tw Cen MT Condensed' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
            <format attr='font-family' value='Tw Cen MT Condensed' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#000000' />
            <format attr='color' value='#ffffff' />
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Tw Cen MT Condensed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]</rows>
        <cols>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</cols>
      </table>
      <simple-id uuid='{A2E98F5B-8B1E-4273-9B52-A7688B34C6FC}' />
    </worksheet>
    <worksheet name='Party Status'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>Party &amp; Alliance Status  &lt;</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
          </datasources>
          <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
            <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Leading Candidate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
            <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Canddiate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Party]' role='dimension' type='nominal' />
            <column-instance column='[Constituency]' derivation='Count' name='[cnt:Constituency:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Candidate]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trailing Canddiate]' />
              <groupfilter function='level-members' level='[Trailing Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0FC88A13F06847C89E26FED0A1E194BD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]'>
            <groupfilter function='level-members' level='[Leading Party]' user:ui-action-filter='[Action2_92F95D2F37AE46DBAF6FF4A976ECD8BA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DC9F396390174085A16A5513F7883646]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Exclusions (Leading Party,Status)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Leading Party:nk]' />
              <groupfilter function='level-members' level='[none:Status:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Alliance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Constituency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Party name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Exclusions (Leading Party,Status)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#ffffff' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' />
              <color column='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Status:nk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1C75BA8C-B5D7-43C5-A2BB-0D98DB1F7942}' />
    </worksheet>
    <worksheet name='PartyMargin'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>Party &amp; Alliance Margin &lt;</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
          </datasources>
          <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
            <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Leading Candidate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Canddiate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Party]' role='dimension' type='nominal' />
            <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Candidate]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trailing Canddiate]' />
              <groupfilter function='level-members' level='[Trailing Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_BAFA61971FA7478AA15A5C51A83E1582]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0FC88A13F06847C89E26FED0A1E194BD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]'>
            <groupfilter function='level-members' level='[Leading Party]' user:ui-action-filter='[Action2_92F95D2F37AE46DBAF6FF4A976ECD8BA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DC9F396390174085A16A5513F7883646]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Alliance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Constituency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Party name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' value='134' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='omit-on-special' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#00ff00' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]</rows>
        <cols>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</cols>
      </table>
      <simple-id uuid='{53531481-286B-4848-B771-8008CD1986C1}' />
    </worksheet>
    <worksheet name='Seatwon'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>Seat Won Party/Alliance &lt;</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
          </datasources>
          <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
            <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Leading Candidate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Canddiate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Party]' role='dimension' type='nominal' />
            <column-instance column='[Alliance]' derivation='Attribute' name='[attr:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='Count' name='[cnt:Constituency:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Margin]' derivation='Count' name='[cnt:Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Candidate]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trailing Canddiate]' />
              <groupfilter function='level-members' level='[Trailing Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_BAFA61971FA7478AA15A5C51A83E1582]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0FC88A13F06847C89E26FED0A1E194BD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DC9F396390174085A16A5513F7883646]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Alliance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Constituency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Leading Party])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Leading Party:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Party name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' />
              <wedge-size column='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Margin:qk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[attr:Alliance:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='off' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AF91717E-5460-4BD8-AACC-23D774480FB7}' />
    </worksheet>
    <worksheet name='State Party &amp; Alliance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>State-wise Leading Parties &amp; &lt;</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&gt; Alliance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
          </datasources>
          <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
            <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Leading Candidate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
            <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Canddiate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Party]' role='dimension' type='nominal' />
            <column-instance column='[Leading Party]' derivation='Count' name='[cnt:Leading Party:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Candidate]' derivation='None' name='[none:Leading Candidate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trailing Canddiate]' derivation='None' name='[none:Trailing Canddiate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trailing Party]' derivation='None' name='[none:Trailing Party:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_BAFA61971FA7478AA15A5C51A83E1582]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0FC88A13F06847C89E26FED0A1E194BD]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]'>
            <groupfilter function='level-members' level='[Leading Party]' user:ui-action-filter='[Action2_92F95D2F37AE46DBAF6FF4A976ECD8BA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Alliance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Constituency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Party name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Leading Party:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Constituency,Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='font-family' data-class='subtotal' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:State:nk]' value='376' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:State:nk]' value='Tw Cen MT' />
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Leading Party:qk]' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#f2f2f222' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
            <format attr='font-family' value='Tw Cen MT Condensed' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Candidate:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Trailing Canddiate:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Trailing Party:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:State:nk]</rows>
        <cols>[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Leading Party:qk]</cols>
      </table>
      <simple-id uuid='{C9722EAA-DF0D-4FCB-AFE2-F56D08389CF5}' />
    </worksheet>
    <worksheet name='Victory/Trailing Margi'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&lt;</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</run>
            <run fontcolor='#ffffff' fontname='Tw Cen MT'>&gt;  Victory/Defeat Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
          </datasources>
          <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
            <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
            <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[Leading Candidate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Leading Party]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Canddiate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Trailing Party]' role='dimension' type='nominal' />
            <column-instance column='[Trailing Party]' derivation='Attribute' name='[attr:Trailing Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
            <column-instance column='[Leading Party]' derivation='None' name='[none:Leading Party:nk]' pivot='key' type='nominal' />
            <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Margin]' derivation='Sum' name='[sum:Margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Constituency]' />
              <groupfilter function='level-members' level='[Leading Candidate]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Trailing Canddiate]' />
              <groupfilter function='level-members' level='[Trailing Party]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_BAFA61971FA7478AA15A5C51A83E1582]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Alliance]' />
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Status]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]'>
            <groupfilter function='level-members' level='[Leading Party]' user:ui-action-filter='[Action2_92F95D2F37AE46DBAF6FF4A976ECD8BA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DC9F396390174085A16A5513F7883646]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Leading Party]' />
              <groupfilter function='level-members' level='[Party name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_2A9CD2522F7149789ACB546D5678C717]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Party name]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Alliance:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Constituency:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Party name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Leading Party,Status)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party,Party name)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Party name,State)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Leading Party)]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</column>
            <column>[federated.0yajqft17xqn5j136lryb14dpj3j].[Action (Alliance,Constituency,Leading Candidate,Leading Party,Party name,State,Trailing Canddiate,Trailing Party)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='Tw Cen MT' />
            <format attr='color' value='#000000' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' value='Tw Cen MT Condensed Extra Bold' />
            <format attr='font-family' data-class='total' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' value='Tw Cen MT' />
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
            <format attr='omit-on-special' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#ffffff' />
            <format attr='font-family' value='Tw Cen MT Condensed Extra Bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='background-color' value='#000000' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-family' field='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-family' value='Tw Cen MT' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Tw Cen MT' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' />
              <text column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' />
              <color column='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' />
              <lod column='[federated.0yajqft17xqn5j136lryb14dpj3j].[attr:Trailing Party:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E25A0B27-5CFC-402B-AC5A-2AB926D9D83B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Election dataset 2024.csv (Multiple Connections)' name='federated.0yajqft17xqn5j136lryb14dpj3j' />
      </datasources>
      <datasource-dependencies datasource='federated.0yajqft17xqn5j136lryb14dpj3j'>
        <column datatype='string' name='[Alliance]' role='dimension' type='nominal' />
        <column datatype='string' name='[Constituency]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
        <column datatype='string' name='[Party name]' role='dimension' type='nominal' />
        <column-instance column='[Alliance]' derivation='None' name='[none:Alliance:nk]' pivot='key' type='nominal' />
        <column-instance column='[Constituency]' derivation='None' name='[none:Constituency:nk]' pivot='key' type='nominal' />
        <column-instance column='[Party name]' derivation='None' name='[none:Party name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='99032' x='484' y='929'>
            <zone h='98142' id='5' type-v2='layout-basic' w='99032' x='484' y='929'>
              <zone h='43338' id='3' name='Party &amp; Alliance Seats' w='49474' x='484' y='55733'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='54804' id='9' name='State Party &amp; Alliance' w='49474' x='484' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32672' id='13' name='Victory/Trailing Margi' w='19685' x='49958' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32672' id='16' name='Seatwon' w='29873' x='69643' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41296' id='19' name='PartyMargin' w='49558' x='49958' y='33601'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24174' id='21' name='Party Status' w='49558' x='49958' y='74897'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11034' id='8' mode='radiolist' name='Party &amp; Alliance Seats' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' show-title='false' type-v2='filter' w='10157' x='60' y='16028' />
        <zone h='3717' id='10' mode='checkdropdown' name='State Party &amp; Alliance' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' show-title='false' type-v2='filter' w='10157' x='0' y='6852' />
        <zone h='3717' id='14' mode='checkdropdown' name='Victory/Trailing Margi' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' show-title='false' type-v2='filter' w='10157' x='121' y='11150' />
        <zone h='6620' id='15' name='Victory/Trailing Margi' pane-specification-id='0' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' show-title='false' type-v2='color' w='9129' x='60' y='29152' />
        <zone forceUpdate='true' h='8595' id='22' is-scaled='1' param='C:/Ngain/Working/ila massively/images/loksabha.jfif' type-v2='bitmap' w='8041' x='44800' y='24971' />
        <zone h='4994' id='23' is-scaled='1' param='D:/documents all/Logos/Ng 1(8).png' type-v2='bitmap' w='3083' x='1028' y='92334' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='32' param='vert' type-v2='layout-flow' w='99032' x='484' y='929'>
                <zone h='3717' id='10' mode='checkdropdown' name='State Party &amp; Alliance' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' show-title='false' type-v2='filter' w='10157' x='0' y='6852'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54804' id='9' is-fixed='true' name='State Party &amp; Alliance' w='49474' x='484' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3717' id='14' mode='checkdropdown' name='Victory/Trailing Margi' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' show-title='false' type-v2='filter' w='10157' x='121' y='11150'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32672' id='13' is-fixed='true' name='Victory/Trailing Margi' w='19685' x='49958' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6620' id='15' name='Victory/Trailing Margi' pane-specification-id='0' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' show-title='false' type-v2='color' w='9129' x='60' y='29152'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32672' id='16' is-fixed='true' name='Seatwon' w='29873' x='69643' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='69' forceUpdate='true' h='8595' id='22' is-fixed='true' is-scaled='1' param='C:/Ngain/Working/ila massively/images/loksabha.jfif' type-v2='bitmap' w='8041' x='44800' y='24971'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41296' id='19' is-fixed='true' name='PartyMargin' w='49558' x='49958' y='33601'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11034' id='8' mode='dropdown' name='Party &amp; Alliance Seats' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' show-title='false' type-v2='filter' w='10157' x='60' y='16028'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43338' id='3' is-fixed='true' name='Party &amp; Alliance Seats' w='49474' x='484' y='55733'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='24174' id='21' is-fixed='true' name='Party Status' w='49558' x='49958' y='74897'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='40' h='4994' id='23' is-fixed='true' is-scaled='1' param='D:/documents all/Logos/Ng 1(8).png' type-v2='bitmap' w='3083' x='1028' y='92334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{72165E2C-3D6B-413E-89F5-855E186F54B8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Party &amp; Alliance Seats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Candidate:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{357E3BC9-14AD-47FD-9E5E-452A952EBA90}' />
    </window>
    <window class='worksheet' name='State Party &amp; Alliance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Candidate:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:State:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Trailing Canddiate:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Trailing Party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D266979D-12E5-4733-A40A-DCCCE5EB4720}' />
    </window>
    <window class='worksheet' name='Victory/Trailing Margi'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Candidate:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Trailing Canddiate:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Trailing Party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D15DA6D-F94A-4675-87C1-4AF47079C705}' />
    </window>
    <window class='worksheet' name='Seatwon'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93074EB8-0E2E-4508-A19B-0BF00E1252AC}' />
    </window>
    <window class='worksheet' name='PartyMargin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[sum:Margin:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{071F3641-4D0F-4D82-B05D-27DFB5184201}' />
    </window>
    <window class='worksheet' name='Party Status'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[Exclusions (Leading Party,Status)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[cnt:Constituency:qk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Alliance:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Constituency:nk]</field>
            <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D24606AE-B28A-459B-878F-39042ACA1DEA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Party &amp; Alliance Seats'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Party Status'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='PartyMargin'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Seatwon'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State Party &amp; Alliance'>
          <zoom type='entire-view' />
          <highlight field='[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Party name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Victory/Trailing Margi'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0yajqft17xqn5j136lryb14dpj3j].[none:Leading Party:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='23' />
      <simple-id uuid='{D82F6045-9827-4BF6-922A-9B31842CF8B7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      ValnJgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Party &amp; Alliance Seats' width='192'>
      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
      TJSodQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Party Status' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PartyMargin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Seatwon' width='192'>
      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
      Nsx1LE0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State Party &amp; Alliance' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Victory/Trailing Margi' width='192'>
      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
      ZFjMpivjuVYqTeUVDOw/stldIqVTKieO7PsH3sqGC+dOMP2e+XRNHYCH2raLDRs9hX6DR3Fg
      z3Y++2A1jY31vPXJLwQFh2GxmMm8cJaEpHYuHV6iKJKXk8nAYeNRqmzWnriENrTvlEpEVDyC
      IKBQqji0bwfH0vYwcfocYuNbU1lRyu6dP7Plu88c9IR1ry5Go/V0M8C/C96RPgxfPRYPXzWi
      VbT9XScz1xbUsHP5JsKC+hHTqatTcam80yc49vNm2g8b5dR24rcthLdpR3K/QU5E3lBVSdWx
      46j6jmh2foIgoFAoyc26SHRcy/0AAPV1tdw+7T5CwqKcokHVGk8GDZ9A+849+Wv7TwQFhwG2
      nafwcjYH9/7O5BkP4qHW2sWcutpqtnz/GeGRscTEJTmMF9sqmcryUpQqD0wmIw31tYyddDcJ
      rVOQyxUEysJITG6Pr1+AAwPodA289sKjbgb4d6HV8NZ4+NoUVUEiYDaYOfb+IfziAzDWG9AE
      aunxWE/2bFmNvu5+WqX2QSaXYzGZyEzbz6bnn6K2vJS8U8eJan9Nzq4rK+Xgpi9prKlixIIn
      6TRqPGovL0SLlbwzJ8k6eog23i0zGWq9vFn/xnO8uOqTJh1YN8JiNiOTywkNbzpTTBAEAoNC
      GTNxJlarFYlEgiiKlJcVc2DPdvbu+o2E1u3x8fWntqaKhoY6sjPTmT13scvx3lm9FLVGi5eP
      H9NmznNQ3uVyBal9hhKf0JYlC2eSnZmOTCZnyl1zGT3hTncs0L8LHe/uRoc7u9j/19fo+O6u
      LzHrTHSe3YOUaZ0AW62dnU/vpP+0eST17s/FA3v56dUXaKiqBMA7OIShDy0gYUA36qtL+XHZ
      a+SdOAHYCC110EimzVqAl9aL7PTTlEpMqBoMjBo55aZzPH/2OAvuG0dq36E8/cI6PDxc192/
      Cl1jA5kXztCuY/dmxavrcSH9JJdzL9F30ChkMlv5w5ysC7y6bD7VVRWsXPs5MfGtsVotFBde
      JjQ8ysFfkJ97iUdmjUana+D19ZtI6dh0aEfa/j9Y+vg9PPLkCkaNn2FL5GnRLN34p+PCz2ep
      zq0CbGKLrlKHb6zNNu0Z6mXvJ5PLmbFqLamTZ+AXHkmPidO4Y8Uau/e2oaacasVeCoybqNXs
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
